import {
  DataElement,
  PatientEntity,
  CarePartner,
  RelatedPerson,
  Practitioner,
  Organization,
  Location,
  PhysicalExamOrder,
  Participation,
  PatientCharacteristicSex,
  CareGoal,
  PatientCharacteristic,
  PatientCharacteristicRace,
  LaboratoryTestPerformed,
  Symptom,
  MedicationAdministered,
  ProcedureRecommended,
  Diagnosis,
  CommunicationPerformed,
  AssessmentPerformed,
  PatientCharacteristicClinicalTrialParticipant,
  DeviceOrder,
  DiagnosticStudyPerformed,
  InterventionOrder,
  FamilyHistory,
  MedicationActive,
  LaboratoryTestOrder,
  DiagnosticStudyOrder,
  SubstanceOrder,
  PatientCharacteristicPayer,
  PatientCharacteristicExpired,
  AssessmentOrder,
  AssessmentRecommended,
  ImmunizationAdministered,
  SubstanceAdministered,
  EncounterOrder,
  EncounterRecommended,
  ProcedurePerformed,
  AllergyIntolerance,
  PhysicalExamRecommended,
  PatientCharacteristicBirthdate,
  AdverseEvent,
  DeviceRecommended,
  MedicationDischarge,
  InterventionPerformed,
  LaboratoryTestRecommended,
  MedicationDispensed,
  DiagnosticStudyRecommended,
  ImmunizationOrder,
  PatientCareExperience,
  ProviderCareExperience,
  ProcedureOrder,
  MedicationOrder,
  SubstanceRecommended,
  InterventionRecommended,
  PhysicalExamPerformed,
  PatientCharacteristicEthnicity,
  EncounterPerformed,
} from "cqm-models";
import { CqmModelFactory } from "./CqmModelFactory";

describe("CqmModelFactory", () => {
  it("instantiate models", () => {
    expect(CqmModelFactory.instantiateModel("PatientEntity")).toBeInstanceOf(
      PatientEntity
    );
    expect(CqmModelFactory.instantiateModel("CarePartner")).toBeInstanceOf(
      CarePartner
    );
    expect(CqmModelFactory.instantiateModel("RelatedPerson")).toBeInstanceOf(
      RelatedPerson
    );
    expect(CqmModelFactory.instantiateModel("Practitioner")).toBeInstanceOf(
      Practitioner
    );
    expect(CqmModelFactory.instantiateModel("Organization")).toBeInstanceOf(
      Organization
    );
    expect(CqmModelFactory.instantiateModel("Location")).toBeInstanceOf(
      Location
    );
    expect(
      CqmModelFactory.instantiateModel("PhysicalExamOrder")
    ).toBeInstanceOf(PhysicalExamOrder);
    expect(CqmModelFactory.instantiateModel("Participation")).toBeInstanceOf(
      Participation
    );
    expect(
      CqmModelFactory.instantiateModel("PatientCharacteristicSex")
    ).toBeInstanceOf(PatientCharacteristicSex);
    expect(CqmModelFactory.instantiateModel("CareGoal")).toBeInstanceOf(
      CareGoal
    );
    expect(
      CqmModelFactory.instantiateModel("PatientCharacteristic")
    ).toBeInstanceOf(PatientCharacteristic);
    expect(
      CqmModelFactory.instantiateModel("PatientCharacteristicRace")
    ).toBeInstanceOf(PatientCharacteristicRace);
    expect(
      CqmModelFactory.instantiateModel("LaboratoryTestPerformed")
    ).toBeInstanceOf(LaboratoryTestPerformed);
    expect(CqmModelFactory.instantiateModel("Symptom")).toBeInstanceOf(Symptom);
    expect(
      CqmModelFactory.instantiateModel("MedicationAdministered")
    ).toBeInstanceOf(MedicationAdministered);
    expect(
      CqmModelFactory.instantiateModel("ProcedureRecommended")
    ).toBeInstanceOf(ProcedureRecommended);
    expect(CqmModelFactory.instantiateModel("Diagnosis")).toBeInstanceOf(
      Diagnosis
    );
    expect(
      CqmModelFactory.instantiateModel("CommunicationPerformed")
    ).toBeInstanceOf(CommunicationPerformed);
    expect(
      CqmModelFactory.instantiateModel("AssessmentPerformed")
    ).toBeInstanceOf(AssessmentPerformed);
    expect(
      CqmModelFactory.instantiateModel(
        "PatientCharacteristicClinicalTrialParticipant"
      )
    ).toBeInstanceOf(PatientCharacteristicClinicalTrialParticipant);
    expect(CqmModelFactory.instantiateModel("DeviceOrder")).toBeInstanceOf(
      DeviceOrder
    );
    expect(
      CqmModelFactory.instantiateModel("DiagnosticStudyPerformed")
    ).toBeInstanceOf(DiagnosticStudyPerformed);
    expect(
      CqmModelFactory.instantiateModel("InterventionOrder")
    ).toBeInstanceOf(InterventionOrder);
    expect(CqmModelFactory.instantiateModel("FamilyHistory")).toBeInstanceOf(
      FamilyHistory
    );
    expect(CqmModelFactory.instantiateModel("MedicationActive")).toBeInstanceOf(
      MedicationActive
    );
    expect(
      CqmModelFactory.instantiateModel("LaboratoryTestOrder")
    ).toBeInstanceOf(LaboratoryTestOrder);
    expect(
      CqmModelFactory.instantiateModel("DiagnosticStudyOrder")
    ).toBeInstanceOf(DiagnosticStudyOrder);
    expect(CqmModelFactory.instantiateModel("SubstanceOrder")).toBeInstanceOf(
      SubstanceOrder
    );
    expect(
      CqmModelFactory.instantiateModel("PatientCharacteristicPayer")
    ).toBeInstanceOf(PatientCharacteristicPayer);
    expect(
      CqmModelFactory.instantiateModel("PatientCharacteristicExpired")
    ).toBeInstanceOf(PatientCharacteristicExpired);
    expect(CqmModelFactory.instantiateModel("AssessmentOrder")).toBeInstanceOf(
      AssessmentOrder
    );
    expect(
      CqmModelFactory.instantiateModel("AssessmentRecommended")
    ).toBeInstanceOf(AssessmentRecommended);
    expect(
      CqmModelFactory.instantiateModel("ImmunizationAdministered")
    ).toBeInstanceOf(ImmunizationAdministered);
    expect(
      CqmModelFactory.instantiateModel("SubstanceAdministered")
    ).toBeInstanceOf(SubstanceAdministered);
    expect(CqmModelFactory.instantiateModel("EncounterOrder")).toBeInstanceOf(
      EncounterOrder
    );
    expect(
      CqmModelFactory.instantiateModel("EncounterRecommended")
    ).toBeInstanceOf(EncounterRecommended);
    expect(
      CqmModelFactory.instantiateModel("ProcedurePerformed")
    ).toBeInstanceOf(ProcedurePerformed);
    expect(
      CqmModelFactory.instantiateModel("Allergy/Intolerance")
    ).toBeInstanceOf(AllergyIntolerance);
    expect(
      CqmModelFactory.instantiateModel("PhysicalExamRecommended")
    ).toBeInstanceOf(PhysicalExamRecommended);
    expect(
      CqmModelFactory.instantiateModel("PatientCharacteristicBirthdate")
    ).toBeInstanceOf(PatientCharacteristicBirthdate);
    expect(CqmModelFactory.instantiateModel("AdverseEvent")).toBeInstanceOf(
      AdverseEvent
    );
    expect(
      CqmModelFactory.instantiateModel("DeviceRecommended")
    ).toBeInstanceOf(DeviceRecommended);
    expect(
      CqmModelFactory.instantiateModel("MedicationDischarge")
    ).toBeInstanceOf(MedicationDischarge);
    expect(
      CqmModelFactory.instantiateModel("LaboratoryTestRecommended")
    ).toBeInstanceOf(LaboratoryTestRecommended);
    expect(
      CqmModelFactory.instantiateModel("InterventionPerformed")
    ).toBeInstanceOf(InterventionPerformed);
    expect(
      CqmModelFactory.instantiateModel("MedicationDispensed")
    ).toBeInstanceOf(MedicationDispensed);
    expect(
      CqmModelFactory.instantiateModel("DiagnosticStudyRecommended")
    ).toBeInstanceOf(DiagnosticStudyRecommended);
    expect(
      CqmModelFactory.instantiateModel("ImmunizationOrder")
    ).toBeInstanceOf(ImmunizationOrder);
    expect(
      CqmModelFactory.instantiateModel("PatientCareExperience")
    ).toBeInstanceOf(PatientCareExperience);
    expect(
      CqmModelFactory.instantiateModel("ProviderCareExperience")
    ).toBeInstanceOf(ProviderCareExperience);
    expect(CqmModelFactory.instantiateModel("ProcedureOrder")).toBeInstanceOf(
      ProcedureOrder
    );
    expect(CqmModelFactory.instantiateModel("MedicationOrder")).toBeInstanceOf(
      MedicationOrder
    );
    expect(
      CqmModelFactory.instantiateModel("SubstanceRecommended")
    ).toBeInstanceOf(SubstanceRecommended);
    expect(
      CqmModelFactory.instantiateModel("InterventionRecommended")
    ).toBeInstanceOf(InterventionRecommended);
    expect(
      CqmModelFactory.instantiateModel("PhysicalExamPerformed")
    ).toBeInstanceOf(PhysicalExamPerformed);

    expect(
      CqmModelFactory.instantiateModel("PatientCharacteristicEthnicity")
    ).toBeInstanceOf(PatientCharacteristicEthnicity);
    expect(
      CqmModelFactory.instantiateModel("EncounterPerformed")
    ).toBeInstanceOf(EncounterPerformed);
  });

  it("Error on UnSupportedType", () => {
    try {
      CqmModelFactory.instantiateModel("Covid");
    } catch (e) {
      expect(e.message).toEqual("Unsupported data type: Covid");
    }
  });
});
